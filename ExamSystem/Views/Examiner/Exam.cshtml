@model List<Exam>
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Exam Management System</title>
    <!-- Font Awesome -->
    <link rel="stylesheet" href="/asset/fontawesome/css/all.min.css">
    <link rel="stylesheet" href="/asset/css/adminlte.min.css">
    <link rel="stylesheet" href="/asset/css/style.css">
    <link rel="stylesheet" href="/asset/tables/datatables-bs4/css/dataTables.bootstrap4.min.css">

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="~/css/index.css" >



    <style type="text/css">
        td a.btn {
            font-size: 0.7rem;
        }

        td p {
            padding-left: 0.5rem !important;
        }

        th {
            padding: 1rem !important;
        }

        table tr td {
            padding: 0.3rem !important;
            font-size: 13px;
        }

        .bg1 {
            background-color: rgb(160,20,79);
            color: rgb(211, 209, 207);
        }

        .bg2 {
            background-color: rgb(20,83,154);
            color: rgb(211, 209, 207);
        }

        .bg3 {
            background-color: rgb(4,91,98);
            color: rgb(211, 209, 207);
        }
    </style>
</head>
<body class="hold-transition sidebar-mini layout-fixed">
    <div class="wrapper">
        <!-- Navbar -->
        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand navbar-white navbar-light" style="background-color: #212529;">
        <!-- Left navbar links -->
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars" style="color: rgb(211, 209, 207);"></i></a>
                </li>
            </ul>
            <!-- Right navbar links -->
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a class="nav-link" data-widget="fullscreen" href="#" role="button">
                        <i class="fas fa-expand-arrows-alt" style="color: rgb(211, 209, 207);"></i>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-widget="fullscreen" href="/Account/Logout   ">
                        <i class="fas fa-power-off" style="color: rgb(211, 209, 207);"></i>
                    </a>
                </li>
            </ul>
        </nav>
        <!-- /.navbar -->
        <!-- Main Sidebar Container -->
        <!-- Main Sidebar Container -->
        <aside class="main-sidebar sidebar-dark-primary elevation-4" style="background-color: #212529;">
            <!-- Brand Logo -->
           <img src=/images/logo.jpg alt="DSMS Logo" width="248" height="110" style="margin-bottom: 10px;">
            <!-- Sidebar -->
            <div class="sidebar">
                <!-- Sidebar Menu -->
                <nav class="mt-2">
                    <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                        <li class="nav-item">
  <a onclick="window.location.href='/Examiner/Index'"
     class="nav-link">
      <i class="nav-icon fa fa-tachometer-alt"></i>
      <p>
          Dashboard
      </p>
  </a>
    </li>
    <li class="nav-item">
  <a onclick="window.location.href='/Examiner/Exam'" class="nav-link">
      <i class="nav-icon fa fa-file-signature"></i>
      <p>
          Exam
      </p>
  </a>
    </li>
    <li class="nav-item">
  <a onclick="window.location.href='/Examiner/Reference'" class="nav-link">
      <i class="nav-icon far fa-file-word"></i>
      <p>
          Reference
      </p>
  </a>
    <li class="nav-item">
  <a onclick="window.location.href='/Examiner/Subject'" class="nav-link">
      <i class="nav-icon fa fa-book"></i>
      <p>
          Subject
      </p>
  </a>
</li>
<li class="nav-item">
  <a onclick="window.location.href='/Examiner/Overview'"
     class="nav-link">
      <i class="nav-icon fa fa-poll"></i>
      <p>
          Overview
      </p>
  </a>
</li>
</ul>
                </nav>
                <!-- /.sidebar-menu -->
            </div>
            <!-- /.sidebar -->
        </aside>
        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">
            <!-- Content Header (Page header) -->
            <div class="content-header">
                <div class="container-fluid">
                    <div class="row mb-2">
                        <div class="col-sm-6">
  <h1 class="m-0" style="color: rgb(31,108,163);"><span class="fa fa-file-word"></span> Exams</h1>
                        </div>
                        <!-- /.col -->
                        <div class="col-sm-6">
  <ol class="breadcrumb float-sm-right">
      <li class="breadcrumb-item"><a href="#">Home</a></li>
      <li class="breadcrumb-item active">Exams</li>
  </ol>
                        </div>
                        <!-- /.col -->
                    </div>
                    <!-- /.row -->
                </div>
                <!-- /.container-fluid -->
            </div>
            <!-- /.content-header -->
            <!-- Main content -->
            <section class="content">
                <div class="container-fluid">
                    <div class="card card-info">
                        <div class="card-body">
  <button class="btn btn-sm bg1" data-toggle="modal" data-target="#fullScreenModal">
      <i class="fa fa-plus"></i> Add Exam
  </button><br><br>
  <div class="col-md-12 table-responsive">
      <table id="example1" class="table align-items-center mb-0">
          <thead>
              <tr>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Exam Name</th>      
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Date</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Timer Allowed</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Action</th>
              </tr>
          </thead>
          <tbody>
                 @foreach (var exam in Model)
                  {
            <tr>
                <td>@exam.ExamName</td>
                <td>@exam.DateCreated.ToString("dd-MMM yyyy")</td>
                <td>@exam.TimeAllocated</td>
                
                <td class="text-right">
                <a class="btn btn-sm bg3" data-toggle="modal" data-target="#fullScreenModal" onclick="EditExam('@exam.ExamId')"><i class="fa fa-edit"></i> edit</a>
                    <a class="btn btn-sm bg1"  href="/Examiner/DeleteExam?id=@exam.ExamId">
                        <i class="fa fa-trash-alt"></i> delete
                    </a>
                </td>
            </tr>    
                  }
          </tbody>
      </table>
       </div>
       </div>       
       </div>
       </div>
       </div>
      </div>
        <!-- /.card-body -->
    </div>
    <!-- /.container-fluid -->
    </section>
    <!-- /.content -->
    </div>
    <!-- /.content-wrapper -->
    </div>
    <!-- ./wrapper -->

    <!-- Full-Screen Modal -->
    <div class="modal fade res-modal" id="fullScreenModal" tabindex="-1" role="dialog" aria-labelledby="fullScreenModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="fullScreenModalLabel">Add New Exam</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" i8 />
                <table>
                    <tr>
                        <td>Subject</td>
                        <td style="width: 70px;"></td>
                        <td>Time Allowed</td>
                        <td style="width: 70px;"></td>
                        <td>Value of a Question</td>
                        <td style="width: 70px;"></td>
                        <td>Passing Mark(%)</td>
                    </tr>
                    <tr style="height: 20px;"></tr>
                    <tr>
                        <td>
  <select id="subject" name="Subject" class="custom-select type">
      <option value="Type" hidden selected>Type</option>
      @foreach (var subType in ViewBag.Subjects)
      {
          <option value=@subType.SubjectName>@subType.SubjectName</option>
      }
  </select>
                        <td></td>
            </td>
                        <td><input id="time" type="time"></td>
                        <td></td>
                        <td><input id="value" min="1" type="number"></td>
                        <td></td>
                        <td><input id="pass" type="number" min="50" name="" id=""></td>
                    </tr>
                    <tr style="height: 20px;"></tr>
                    <tr>
                        <td  colspan="3">Exam Name/Number</td>
                        <td colspan="4"><input id="exam" type="text" style="width: 100%;" value=""></td>
                    </tr>
                    <tr style="height: 20px;"></tr>
                    <tr >
                        <td colspan="2"> <span>Question 1</span></td>
                        <td colspan="5" class="1"><input id ="q1" type="text" style="width: 100%;" placeholder="Write question here"></td>
                    </tr>
                    <tr style="height: 20px;"></tr>
                    <tr id ="ans1" class="answers"><td class="1 ans1"  colspan="7"><input type="radio" name="1"> <input type="text" style="width: 80%;"></td></tr>
                    <tr id ="ans2" class="answers"><td class="1 ans1"  colspan="7"><input type="radio" name="1"> <input type="text" style="width: 80%;"></td></tr>
                    <tr  style="height: 20px;"></tr>
                    <tr id ="lastElt1"><td><button class="btn btn-primary" onclick="addAnswer(this)">Add New Answer</button></td></tr>
                    <tr id="before"><td><button class="btn btn-primary" onclick="addQuestion(this)">Add New Question</button></td></tr>
                    <tr><td>
  <button id="save" class="btn btn-primary" onclick="saveExam()">Save Exam</button>
                    </td>
                        
                    </tr>
                </table>
            </div>


        </div>
    </div>


    <!-- jQuery -->
    <script src="../asset/jquery/jquery.min.js"></script>
    <script src="../asset/js/bootstrap.bundle.min.js"></script>
    <script src="../asset/js/adminlte.js"></script>
    <!-- DataTables  & Plugins -->
    <script src="../asset/tables/datatables/jquery.dataTables.min.js"></script>
    <script src="../asset/tables/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="../asset/tables/datatables-responsive/js/responsive.bootstrap4.min.js"></script>s
    <script src="../asset/tables/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script>
       // console.log("bdadjdsd")
        $(function () {
            $("#example1").DataTable();
        });
            var Qno = 1;
        var exx = ""


        function addAnswer(e) {
            var html2 = `${"<tr class=\"answers add\"><td  class=\"" + Qno + "\" colspan=\"7px \"><input  name=\"" + Qno + "\" type=\"radio\" > <input type=\"text\" style=\"width: 80%;\">  <button onclick=\"deleteAnswer(this)\" class=\"btn-primary\">Delete</button></td></tr>"}`

       
            e.parentElement.parentElement.previousElementSibling.insertAdjacentHTML("beforebegin", html2)
        }
        function deleteAnswer(elt) {
            // btn.textContent="WOW"
            var tr = elt.parentElement.parentElement
            tr.parentElement.removeChild(tr)
            // btn.parentElement.parentElement.parentElement.remove(btn.parentElement.parentElement)
        }

        function addQuestion(btn) 
        {
            // var ew=`${btn+"dsa" }`
            var html = `${"<tr class=\"add\" style=\"height: 20px;\"></tr> <tr class=\"add\"><td colspan=\"2\"  >Question <span>" + ++Qno + "</span></td>   <td class=\"" + Qno + "\" colspan=\"5\"><input type=\"text\" style=\"width: 100%;\" placeholder=\"Write question here\"></td> </tr><tr class=\"add\" style=\"height: 20px;\"></tr> <tr class=\"answers add\"><td  class=\"" + Qno + "\" colspan=\"7px\"><input  name=\"" + Qno + "\" type=\"radio\" > <input type=\"text\" style=\"width: 80%;\"></td></tr>  <tr class=\"answers add\"><td  class=\"" + Qno + "\" colspan=\"7px \"><input name=\"" + Qno + "\"  type=\"radio\" > <input type=\"text\" style=\"width: 80%;\"></td></tr>  <tr class=\"add\" style=\"height: 20px;\"></tr><tr class=\"add\"><td><button class=\"btn btn-primary\" onclick=\"addAnswer(this)\">Add New Answer</button></td></tr>"}`
            var elt = btn.parentElement.parentElement.insertAdjacentHTML("beforebegin", html)
        }
        async function saveExam(Ex) {
            if (Ex != null) 
            {
                var Exam = JSON.parse(Ex);
               // console.log(Exam);
                var questions = [];
                for (var i = 0; i < Qno; i++) {
                    var onePack = document.getElementsByClassName(`${i + 1}`);
                    var questionWithAnswer = {
                        QId: Exam.Questions.$values[i].QuesionId,
                        quest: onePack[0].firstElementChild.value,
                        answer: [] // Initialize the `answer` property as an empty array
                    };
                    for (var j = 1; j < onePack.length; j++) 
                    {
                      // console.log(Exam.Questions.$values[i].Answers.$values[j-1].AnswerId) 
                        var k = j - 1;
                        var arr = [
  Exam.Questions.$values[i].Answers.$values[k].AnswerId,
  onePack[j].firstElementChild.checked,
  onePack[j].firstElementChild.nextElementSibling.value
                        ];
                        questionWithAnswer.answer.push(arr);
                    }
                    questions.push(questionWithAnswer);
                }

                var Ex = {
                    Id: Exam.ExamId,
                    Exam: document.getElementById('exam').value,
                    Subject: document.getElementById('subject').value,
                    Time: document.getElementById('time').value,
                    Pass: document.getElementById('pass').value,
                    Value: document.getElementById('value').value,
                    questions: questions
                };

                var JsonData = JSON.stringify(Ex);
                await fetch('/Examiner/SaveEdit', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JsonData
                }).then(res => {
                    window.location.href = '/Examiner/Index';
                });
                //console.log('succcessful')
            } else {
                console.log('miaw miaw ');
                var questions = [];
                for (var i = 0; i < Qno; i++) {
                    var onePack = document.getElementsByClassName(`${i + 1}`);
                    var questionWithAnswer = {
                        quest: onePack[0].firstElementChild.value,
                        answer: [] // Initialize the `answer` property as an empty array
                    };
                    for (var j = 1; j < onePack.length; j++) {
                        var arr = [
  onePack[j].firstElementChild.checked,
  onePack[j].firstElementChild.nextElementSibling.value
                        ];
                        questionWithAnswer.answer.push(arr);
                    }
                    questions.push(questionWithAnswer);
                }

                var Ex = {
                    Exam: document.getElementById('exam').value,
                    Subject: document.getElementById('subject').value,
                    Time: document.getElementById('time').value,
                    Pass: document.getElementById('pass').value,
                    Value: document.getElementById('value').value,
                    questions: questions
                };

                var JsonData = JSON.stringify(Ex);
                await fetch('/Examiner/SaveExam', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JsonData
                }).then(res => {
                    window.location.href = '/Examiner/Index';
                });
            }
        }
       

        function clear()
        {
            console.log('yes am called');
            var elts = document.getElementsByClassName('add');
            while (elts.length > 0) {
                elts[0].parentNode.removeChild(elts[0]);
            }
        }
        function EditExam(id) {
            clear();
            fetch("/Examiner/EditExam?id=" + id)
                .then(res => res.json())
                .then(Exam => {
                    var exAsString = JSON.stringify(Exam);
                    exx = exAsString;
                    document.getElementById('save').onclick = function () {
                        saveExam(exAsString);
                    };
                    document.getElementById('exam').value = Exam["ExamName"];
                    document.getElementById('time').value = Exam["TimeAllocated"];
                    document.getElementById('pass').value = Exam["PassingMark"];
                    document.getElementById('value').value = Exam["QuestionWeight"];
                    document.getElementById('subject').value = Exam.Subject.SubjectName;
                    document.getElementById('q' + Qno).value = Exam.Questions.$values[0].Query;
                    for (var t = 0; t < 2; t++) {
                        document.getElementsByClassName('ans1')[t].firstElementChild.checked = Exam.Questions.$values[0].Answers.$values[t].isCorrect;
                        document.getElementsByClassName('ans1')[t].lastElementChild.value = Exam.Questions.$values[0].Answers.$values[t].AnswerText;
                    }
                    if (Exam.Questions.$values[0].Answers.$values.length > 2) {
                        for (var j = 2; j < Exam.Questions.$values[0].Answers.$values.length; j++) {
  var html = `<tr class="answers add">
      <td class="${Qno}" colspan="7">
          <input type="radio" ${Exam.Questions.$values[0].Answers.$values[j].isCorrect ? 'checked' : ''} name="${Qno}">
          <input value="${Exam.Questions.$values[0].Answers.$values[j].AnswerText}" type="text" style="width: 80%;">
      </td>
  </tr>
  <tr class="add" style="height: 20px;"></tr>`;

  document.getElementById('lastElt' + Qno).previousElementSibling.insertAdjacentHTML("beforebegin", html);
                        }
                    }
                    for (var i = 1; i < Exam.Questions.$values.length; i++) {
                        var lastElmt = `<tr id="lastElt${++Qno}"><td><button class="btn btn-primary add" onclick="addAnswer(this)">Add New Answer</button></td></tr>`;
                        document.getElementById('before').insertAdjacentHTML('beforebegin', lastElmt);
                        var qsn = `<tr class="add">
  <td colspan="2"> <span>Question ${Qno}</span></td>
  <td colspan="5" class="${Qno}"><input id="q${Qno}" type="text" value="${Exam.Questions.$values[i].Query}" style="width: 100%;"></td>
                        </tr>`;
                        document.getElementById('lastElt' + Qno).insertAdjacentHTML('beforebegin', qsn);
                        for (var j = 0; j < Exam.Questions.$values[i].Answers.$values.length; j++) {
  var answer = `<tr class="answers add"><td class="${Qno}" colspan="7">
      <input type="radio" ${Exam.Questions.$values[i].Answers.$values[j].isCorrect ? 'checked' : ''} name="${Qno}">
      <input type="text" value="${Exam.Questions.$values[i].Answers.$values[j].AnswerText}" style="width: 80%;">
  </td></tr>`;
  document.getElementById('lastElt' + Qno).insertAdjacentHTML('beforebegin', answer);
                        }
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }                        
  </script>

</body>

</html>